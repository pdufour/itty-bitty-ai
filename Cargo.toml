[package]
name = "itty_bitty_ai"
version = "0.1.0"
authors = ["Paul Dufour"]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.81"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

# Resolve rand and getrandom version conflicts
[package.metadata.wasm-pack.profile.release]
wasm-opt = false

[dependencies]
egui = "0.30"
eframe = { version = "0.30", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
] }
log = "0.4"
candle = { package = "candle-core", version = "0.8.3" }
candle-nn = "0.8.3"
candle-transformers = "0.8.3"
byteorder = "1.4.3"
tokenizers = { git = "https://github.com/huggingface/tokenizers", branch = "main", default-features = false, features = ["unstable_wasm", "rustls-tls"] }
anyhow = { version = "1", features = ["backtrace"] }

# Wasm specific crates
console_error_panic_hook = "0.1.7"
getrandom = { version = "0.2.11", features = ["js"] }
rand = { version = "0.8.5", features = ["small_rng"] }

wasm-bindgen = "0.2.87"
wasm-bindgen-futures = "0.4.37"
js-sys = "0.3.64"

serde = { version = "1", features = ["derive"] }

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3.70", features = [
    "Request",
    "RequestInit",
    "RequestMode",
    "Response",
    "Window",
    "console",
    "Headers",
]}

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2
